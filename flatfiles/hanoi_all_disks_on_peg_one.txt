"""
For a game where there are 5 disks,
write down the Facts and Rules to model the game state where 
all disks are ON peg1.

        |            |            |
        |            |            |
       -|- disk1     |            |
      --|-- disk2    |            |
     ---|---         |            |
    ----|----        |            |
   -----|----- disk5 |            |
==========================================
       peg1         peg2         peg3
       
Example: 
fact: (pred obj1 obj2)
rule: ((pred obj1 obj2) (pred obj2 obj3)) -> (pred obj1 obj3)

"""

fact: (INST disk1 disk)
fact: (INST disk2 disk)
fact: (INST disk3 disk)
fact: (INST disk4 disk)
fact: (INST disk5 disk)
fact: (INST base1 base)
fact: (INST peg1 peg)
fact: (INST peg2 peg)
fact: (INST peg3 peg)
fact: (ON disk1 peg1)
fact: (ON disk2 peg1)
fact: (ON disk3 peg1)
fact: (ON disk4 peg1)
fact: (ON disk5 peg1)
fact: (ONTOP disk4 disk5)
fact: (ONTOP disk3 disk4)
fact: (ONTOP disk2 disk3)
fact: (ONTOP disk1 disk2)
fact: (ONTOP disk5 base1)
fact: (EMPTY peg2)
fact: (EMPTY peg3)
fact: (TOP disk1)
fact: (LARGER disk2 disk1)
fact: (LARGER disk3 disk2)
fact: (LARGER disk4 disk3)
fact: (LARGER disk5 disk4)
rule: ((LARGER ?diskA ?diskB) (LARGER ?diskB ?diskC)) -> (LARGER ?diskA ?diskC)
rule: ((TOP ?disk) (ON ?disk ?initial) (EMPTY ?target)) -> (MOVABLE ?disk ?initial ?target)
rule: ((TOP ?diskA) (ON ?disk ?initial) (TOP ?diskB) (ON ?diskB ?target) (LARGER ?diskA ?diskB)) -> (MOVABLE ?diskA ?initial ?target)

**Constraints**: A disk can be moved to a peg if it is on the top of a stack and either the
peg is empty or the disk at the top of the stack on the peg is larger than it is.  